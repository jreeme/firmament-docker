version: "3.3"

networks:
  elasticsearch-backend:
  elasticsearch-frontend:

services:
#  nginx-proxy:
#    image: 52.0.211.45:5000/nginx-proxy:1.13
#    volumes:
#      - /var/run/docker.sock:/tmp/docker.sock:ro
#    ports:
#      - "80:80"
#    networks:
#      - elasticsearch-backend
#      - elasticsearch-frontend
#    deploy:
#      mode: global
#      endpoint_mode: vip
#      restart_policy:
#        condition: on-failure

#      placement:
#        constraints:
#          - node.role == manager

  elasticsearch:
    image: 52.0.211.45:5000/elasticsearch:2.4.6
    networks:
      - elasticsearch-backend
    environment:
      - VIRTUAL_HOST=${MASTER_IP}
      - VIRTUAL_PORT=9200
    deploy:
      mode: global
      endpoint_mode: dnsrr
      update_config:
        parallelism: 1
        delay: 60s
      restart_policy:
        condition: on-failure

#      placement:
#        constraints:
#          - node.role == manager
    command:
      - elasticsearch
      - -Des.discovery.zen.ping.multicast.enabled=false
      - -Des.discovery.zen.ping.unicast.hosts=elasticsearch
      - -Des.gateway.expected_nodes=3
      - -Des.discovery.zen.minimum_master_nodes=2
      - -Des.gateway.recover_after_nodes=2
      - -Des.network.bind=_eth0:ipv4_

